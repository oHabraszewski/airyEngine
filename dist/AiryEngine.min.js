class Text{constructor(a=0,b=0,c=16,d="You Only Live Once",f="#000",g="arial"){this.x=a,this.y=b,this.s=c,this.text=d,this.color=f,this.fFam=g};draw(a){a.fillStyle=this.color,a.font=this.s+"px '"+this.fFam+"'",a.fillText(this.text,this.x,this.y)};move(){}};class Sprite{constructor(a="/",b=""){this.src=a,this.fileName=b,this.img=new Image(),this.img.src=this.src+b,this.w=this.img.width,this.h=this.img.height}};class Game{constructor(a=300,b=300,c=()=>{},d=()=>{},f=30,g=null){this.w=a,this.h=b,this.fps=f,this.layers=[],this.create=c,this.update=d,this.root=null==g?document.body:g,this.clock=setInterval(()=>{this.update(),this.layers.forEach(h=>{h.drawEntities(),h.collideEntities()})},1e3/this.fps)};add(a){this.canvas=document.createElement("canvas"),this.canvas.setAttribute("width",this.w),this.canvas.setAttribute("height",this.h),this.root.appendChild(this.canvas),this.layers.push(a),a.initialize(this.layers.length-1,this.canvas,this.w,this.h,this.fps)}};class Layer{constructor(){this.entities=[],this.toCollide=[]};add(a){a.layer=this,this.entities.push(a)};delete(a){for(let b=0;b<this.entities.length;b++)(this.entities[b]=a)&&this.entities.splice(b,1);};drawEntities(){this.ctx.clearRect(0,0,this.w,this.h),this.entities.forEach(a=>{a.move(this.fps),a.draw(this.ctx)})};collideEntities(){if(0<this.toCollide.length)for(let a=0;a<this.toCollide.length;a++){const b=this.toCollide[a];for(let c=0;c<this.entities.length;c++){const d=this.entities[c];if(d==b.fstEntity||d==b.sndEntity){if(d==b.sndEntity){const f=b.fstEntity;b.fstEntity=b.sndEntity,b.sndEntity=f};for(let f=0;f<this.entities.length;f++){const g=this.entities[f];if(g==b.sndEntity){const h=b.fstEntity.x,l=b.fstEntity.y,m=b.fstEntity.sprite.w,n=b.fstEntity.sprite.h,o=b.sndEntity.x,p=b.sndEntity.y,q=b.sndEntity.sprite.w,r=b.sndEntity.sprite.h,s=Math.min(h,o),t=Math.min(l,p),u=Math.max(h+m,o+q),v=Math.max(l+n,p+r);u-s<m+q&&v-t<n+r&&b.functionToDo(b.fstEntity,b.sndEntity);break}};break}}}};checkCollision(a,b,c){for(let d=0;d<this.entities.length;d++){const f=this.entities[d];if(console.log("i:"+d+"lenght:"+this.entities.length),f==a){for(let g=0;g<this.entities.length;g++){const h=this.entities[g];if(h==b){this.toCollide.push({fstEntity:a,sndEntity:b,functionToDo:c});break}else g+1==this.entities.length&&console.error("Second entity to collide not finded in layer's entities!")};break}else d+1==this.entities.length&&console.error("First entity to collide not finded in layer's entities!")}};initialize(a,b,c,d,f){this.w=c,this.h=d,this.no=a,this.fps=f,this.ctx=b.getContext("2d")}};class Entity{constructor(a=0,b=0,c=null){console.log(this),this.x=a,this.y=b,this.scale={x:1,y:1},this.pivot={x:0,y:0},this.velocity={ideal:0,x:0,y:0},this.friction=0,this.rotation=0,null==c?(console.warn("You did not enter the Sprite variable so I set the default 😁"),this.sprite=new Sprite("./","default.png")):this.sprite=c,this.w=this.sprite.img.w,this.h=this.sprite.img.h};move(a){if(this.toPoint!=void 0){const d=this.toPoint.px,f=this.toPoint.py,g=Math.max(Math.abs(d-this.x),Math.abs(f-this.y)),h=Math.min(Math.abs(d-this.x),Math.abs(f-this.y)),l=Math.abs(h/g);let m=1,n=1;0>d-this.x&&(m=-1),0>f-this.y&&(n=-1),Math.abs(d-this.x)>Math.abs(f-this.y)?this.setVelocity(m*this.velocity.ideal,n*this.velocity.ideal*l,!1):this.setVelocity(m*this.velocity.ideal*l,n*this.velocity.ideal,!1),this.toPoint=void 0};let b,c;b=0<this.velocity.x?-this.friction:0>this.velocity.x?this.friction:0,c=0<this.velocity.y?-this.friction:0>this.velocity.y?this.friction:0,this.x+=this.velocity.x/a+b/a,this.y+=this.velocity.y/a+c/a};draw(a){null==a?console.error("Entity was not added to the layer!"):(a.save(),a.translate(this.x+this.pivot.x,this.y+this.pivot.y),a.rotate(this.rotation),a.drawImage(this.sprite.img,-this.pivot.x,-this.pivot.y,this.sprite.w*this.scale.x,this.sprite.h*this.scale.y),a.restore())};delete(){this.layer==void 0?console.error("Entity was not added to the layer, so it can not be removed!"):this.layer.delete(this)};rotateToMouse(a){const b=a.pageX-(this.x+this.pivot.x),c=a.pageY-(this.y+this.pivot.y),d=Math.atan2(c,b);this.rotation=d};moveToPoint(a,b){this.toPoint={px:a,py:b}};set isRotatingToMouse(a=!1){a&&window.addEventListener("mousemove",b=>{this.rotateToMouse(b)})};set scaleX(a=1){this.scale.x=a};set scaleY(a=1){this.scale.y=a};set pivotX(a=0){this.pivot.x=a};set pivotY(a=0){this.pivot.y=a};set velocityX(a=0){this.velocity.x=a};set velocityY(a=0){this.velocity.y=a};setScale(a=0,b=null){this.scale.x=a,this.scale.y=null==b?a:b};setPivot(a=0,b=null){this.pivot.x=a,this.pivot.y=null==b?a:b};setVelocity(a=0,b=null,c=!0){c&&(this.velocity.ideal=a),this.velocity.x=a,this.velocity.y=null==b?a:b};setFriction(a=0){this.friction=a}}